export interface AutoSession {
  id: string;
  topic: string;
  participants: string[];
  isLive: boolean;
  isAutoGenerated: true;
  createdAt: Date;
  estimatedDuration: number; // seconds
  currentRound: number;
  maxRounds: number;
  energyLevels: Record<string, number>; // character energy levels
  viewerCount?: number;
  status: 'starting' | 'active' | 'ending' | 'ended';
}

export interface SessionWebSocketMessage {
  type: 'new_autonomous_session' | 'session_ended' | 'session_list_update' | 
        'session_topic_evolved' | 'character_energy_critical' | 'viewer_count_update' |
        'new_message' | 'session_update' | 'audio_ready' | 'error';
  sessionId?: string;
  data: {
    session?: AutoSession;
    sessions?: AutoSession[];
    sessionId?: string;
    message?: {
      characterId: string;
      text: string;
      audioBase64?: string;
      audioUrl?: string;
      lipSync?: any;
      facialExpression: string;
      duration?: number;
    };
    topic?: string;
    characterId?: string;
    energyLevel?: number;
    viewerCount?: number;
    error?: string;
  };
  timestamp: number;
}

export interface SessionStats {
  totalSessions: number;
  activeSessions: number;
  totalViewers: number;
  averageSessionDuration: number;
}